syntax = "proto3";

package com.northsoft.iotProject.joinUp.proto;

import "common.proto";

option java_package = "com.northsoft.iotProject.joinUp.servicegen";
option java_outer_classname = "AccessService";
/**
*   令牌实体
*   Author:刘轶
*   Ver：0.1.0-snapshot
*/
message AccessToken{
    string token = 1; //令牌值
    int32 expiresIn = 2; //接口调用凭证超时时间，单位（秒）
    string machineId = 3; //机器码
    string companyName = 4; //公司名称
    string roomId = 5; //房间号
}

/**
*   申请AccessToken使用的用户信息，手机号或微信相关信息提供一套
*   Author:刘轶
*   Ver：0.1.0-snapshot
*/
message UserInfo{
    string phoneNum = 1; //手机号
    string openId = 2; //微信用户码
    string unionId = 3; //用户业务码
    string roomId = 4; //房间ID
    string machineId = 5; //机器码，在申请Token时可以为空，绑定业务需要
}

/**
*   账户业务接口
*   Author:刘轶
*   Ver：0.1.0-snapshot
*/
service AccountService{
    /**
    *   申请AccessToken
    *   应答详情(Response.details): {@link com.northsoft.iotProject.com.northsoft.joinUp.servicegen.AccessService.AccessToken} Token信息
    *   CODE_200 = 0; // 请求处理成功
    *   CODE_400 = 1; // 语义有误，当前请求无法被服务器理解。除非进行修改，否则客户端不应该重复提交这个请求。
    *   CODE_424 = 3; // 未找到用户与设备的绑定关系
    *   CODE_500 = 4; // 服务器内部错误
    *   Author:刘轶
    *   Ver：0.1.0-snapshot
    */
    rpc accessToken(UserInfo) returns (Response){}
    /**
    *   刷新AccessToken
    *   应答详情(Response.details): {@link com.northsoft.iotProject.com.northsoft.joinUp.servicegen.AccessService.AccessToken} 更新后Token信息
    *   CODE_200 = 0; // 请求处理成功
    *   CODE_400 = 1; // 语义有误，当前请求无法被服务器理解。除非进行修改，否则客户端不应该重复提交这个请求。
    *   CODE_423 = 2; // 未找到合法TOKEN
    *   CODE_500 = 4; // 服务器内部错误
    *   Author:刘轶
    *   Ver：0.1.0-snapshot
    */
    rpc refreshToken(AccessToken) returns (Response){}
    /**
    *   绑定设备
    *   应答详情(Response.details): {@link com.northsoft.iotProject.com.northsoft.joinUp.servicegen.AccessService.AccessToken} 更新后Token信息
    *   CODE_200 = 0; // 请求处理成功
    *   CODE_400 = 1; // 语义有误，当前请求无法被服务器理解。除非进行修改，否则客户端不应该重复提交这个请求。
    *   CODE_423 = 2; // 未找到合法TOKEN
    *   CODE_500 = 4; // 服务器内部错误
    *   Author:刘轶
    *   Ver：0.1.0-snapshot
    */
    rpc bindMachine(UserInfo) returns (Response){}

}